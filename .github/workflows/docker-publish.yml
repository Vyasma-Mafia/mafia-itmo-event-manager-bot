name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Manual trigger for deployment
    inputs:
      environment:
        description: 'The deployment environment to use'
        required: true
        default: 'production'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the deploy job runs after the build job completes
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Debug
        shell: bash
        run: |
          echo "GH_REPO: $VM_HOST"
          echo "GH_REPO_O: $VM_SSH_KEY"
          echo "GH_T: $VM_USER"
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}
          VM_USER: ${{ secrets.VM_USER }}
      - name: Deploy Docker image to the VM
        uses: appleboy/ssh-action@v0.1.6
        with: 
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          debug: true
          script: |
            echo "Pulling the latest git repo..."
            git pull
            echo "Pulling the latest Docker image..."
            docker-compose -f ~/event-manager-bot/mafia-itmo-event-manager/docker-compose.yml pull
            echo "Restarting services..."
            docker-compose -f ~/event-manager-bot/mafia-itmo-event-manager/docker-compose.yml up -d
